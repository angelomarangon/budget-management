@{
    ViewData["Title"] = "Reporte Calendario";
}

<partial name="_SubMenu" model="SubMenuTransacciones.Calendario" />

<div id="calendario" class="calendar-container"></div>

<!-- Modal Detalle Transacciones -->
<div class="modal fade" id="modalTransacciones" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 border-0 shadow-sm">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title fw-semibold text-dark">Transacciones del d√≠a</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body px-4 pt-0">
                <table class="table table-borderless align-middle mb-0">
                    <thead>
                    <tr class="border-bottom">
                        <th id="modalTablaFecha" colspan="2" class="text-muted small fw-semibold"></th>
                        <th id="modalTablaIngresos" class="text-success text-end small fw-semibold"></th>
                        <th id="modalTablaGastos" class="text-danger text-end small fw-semibold"></th>
                    </tr>
                    </thead>
                    <tbody id="modalTablaCuerpo"></tbody>
                </table>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/lib/fullcalendar/main.min.js"></script>
    @* <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.17/index.global.min.js"></script> *@

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const calendarioEl = document.getElementById("calendario");
            const calendario = new FullCalendar.Calendar(calendarioEl, {
                themeSystem: 'bootstrap5',
                locale: 'es',
                height: '70vh',
                headerToolbar: {
                    left: 'prev,next',
                    center: 'title',
                    right: 'today'
                },
                events: '/transacciones/ObtenerTransaccionesCalendario',
                eventDidMount: function (info) {
                    const esGasto = info.event.title.startsWith('-');
                    const montoFormateado = esGasto
                        ? `$${info.event.title.replace('-', '')}`
                        : `$${info.event.title}`;

                    // Reset styles
                    info.el.style.border = "none";
                    info.el.style.fontSize = "0.85rem";
                    info.el.style.padding = "4px 10px";
                    info.el.style.borderRadius = "8px";
                    info.el.style.boxShadow = "0 2px 6px rgba(0,0,0,0.06)";
                    info.el.style.textAlign = "center";
                    info.el.style.width = "fit-content";
                    info.el.style.margin = "auto";

                    // Color styles
                    if (esGasto) {
                        info.el.style.backgroundColor = "#fee2e2"; // soft red
                        info.el.style.color = "#b91c1c"; // dark red
                    } else {
                        info.el.style.backgroundColor = "#d1fae5"; // soft green
                        info.el.style.color = "#065f46"; // dark green
                    }

                    // Actualiza el texto
                    info.el.innerText = montoFormateado;
                },
                dateClick: async function (info) {
                    await buscarTransaccionesPorFecha(info.dateStr);
                },
            });

            calendario.render();
        });

        async function buscarTransaccionesPorFecha(fecha) {
            const response = await fetch(`/transacciones/ObtenerTransaccionesPorFecha?fecha=${fecha}`);
            const json = await response.json();

            let ingresos = 0;
            let gastos = 0;
            const tipoOperacionesIngresos = 1;

            const formateador = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
            });

            const filas = json.map(t => {
                const esIngreso = t.tipoOperacionId === tipoOperacionesIngresos;
                if (esIngreso) ingresos += t.monto;
                else gastos += t.monto;

                return `
                          <tr class="border-bottom">
                            <td class="fw-medium">${t.categoria}</td>
                            <td class="text-muted">${t.cuenta}</td>
                            <td colspan="2" class="text-end">
                              <span class="badge rounded-pill ${esIngreso ? 'bg-success-subtle text-success' : 'bg-danger-subtle text-danger'} px-3 py-2">
                                ${formateador.format(t.monto)}
                              </span>
                            </td>
                          </tr>`;
            });

            document.getElementById("modalTablaCuerpo").innerHTML = filas.join('');
            document.getElementById("modalTablaFecha").textContent = fecha;
            document.getElementById("modalTablaIngresos").textContent = formateador.format(ingresos);
            document.getElementById("modalTablaGastos").textContent = formateador.format(gastos);

            const modal = new bootstrap.Modal(document.getElementById("modalTransacciones"));
            modal.show();
        }
    </script>
}


